{
  "master": {
    "tasks": [
      {
        "id": 1,
        "title": "阶段 1: 教程简介和项目设定",
        "description": "为整个教程系列撰写高质量的介绍，并完成项目的基本设置。",
        "priority": "high",
        "dependencies": [],
        "status": "done"
      },
      {
        "id": 2,
        "title": "阶段 2: 环境准备",
        "description": "撰写一份详细的环境准备教程，指导开发者如何为 CKB 和 RGB++ 开发搭建链下（dApp/前端）和链上（脚本/合约）环境。",
        "priority": "high",
        "dependencies": [
          1
        ],
        "status": "done"
      },
      {
        "id": 3,
        "title": "阶段 3: 撰写 CKB 原生时间锁源码解析教程",
        "description": "基于 'tutorials/03-basic-ckb-time-lock-script' 的内容，完成一篇深入的、从零开始实现 CKB 时间锁的源码解析教程。",
        "priority": "high",
        "dependencies": [
          1
        ],
        "status": "done",
        "subtasks": [
          {
            "id": 1,
            "title": "阐述核心概念：质押与 CKB Script 原理",
            "description": "在教程中详细介绍 Staking 的四种形式，以及 CKB 中通过 Lock/Type Script 实现质押的基本原理。",
            "status": "done"
          },
          {
            "id": 2,
            "title": "解析代码：合约入口与主流程",
            "description": "逐行解释 `main.rs` 的作用，包括 `no_std`、宏定义以及主入口函数的设计。",
            "status": "done"
          },
          {
            "id": 3,
            "title": "解析代码：核心校验逻辑",
            "description": "深入讲解 `has_passed_time_limit` 函数如何遍历 `header_deps` 进行时间戳校验，以及如何复用 `secp256k1` 库进行签名校验。",
            "status": "done"
          }
        ]
      },
      {
        "id": 4,
        "title": "阶段 4: 撰写 RGB++ 之 BTC Time Lock 应用教程",
        "description": "基于 'tutorials/04-btc-time-lock' 的内容，撰写一篇关于如何理解和使用 RGB++ 协议中 BTC Time Lock 标准脚本的教程。",
        "priority": "high",
        "dependencies": [
          2
        ],
        "status": "done",
        "subtasks": [
          {
            "id": 1,
            "title": "解释 BTC Time Lock 核心概念与工作流程",
            "description": "阐述 BTC Time Lock 作为 RGB++ 跨链安全原语的定义，并图文并茂地解释其典型的四步工作流程。",
            "status": "done"
          },
          {
            "id": 2,
            "title": "阐明“如何使用”：调用标准而非自实现",
            "description": "向开发者强调无需自行实现脚本，只需理解协议标准，并使用 ccc SDK 等工具来构造交易。",
            "status": "done"
          },
          {
            "id": 3,
            "title": "提供“跨链质押”实操分步教程",
            "description": "详细拆解跨链质押的五个步骤：环境准备、链下预计算、提交 BTC 交易、提交 CKB 交易、资产解锁。",
            "status": "done"
          },
          {
            "id": 4,
            "title": "整理常见问题与参考资料",
            "description": "总结使用 BTC Time Lock 时的常见问题和注意事项，并提供 RGB++ Guide/SDK 等官方资料的链接。",
            "status": "done"
          }
        ]
      },
      {
        "id": 5,
        "title": "阶段 5: Staking dApp 实战",
        "description": "构建一个带有前端、功能性的 Staking dApp，作为教程的综合实战案例。",
        "priority": "high",
        "dependencies": [
          3
        ],
        "status": "todo",
        "subtasks": [
          {
            "id": 1,
            "title": "创建教程 04-staking-dapp",
            "description": "创建 `tutorials/04-staking-dapp` 目录，并搭建前端项目（如 React/Vite）。",
            "status": "in-progress"
          },
          {
            "id": 2,
            "title": "集成 JoyID 钱包",
            "description": "在前端项目中实现连接 JoyID 钱包、获取地址和签发交易的功能。",
            "status": "todo"
          },
          {
            "id": 3,
            "title": "开发 Staking 和查询 UI",
            "description": "创建用户界面组件，允许用户执行 Staking 操作并能查询相关的链上数据。",
            "status": "todo"
          }
        ]
      },
      {
        "id": 6,
        "title": "阶段 6: 定时发送 dApp 教程",
        "description": "基于 `ccc-schedule-send` 示例，创建一个关于如何实现定时发送交易的 dApp 教程。",
        "priority": "medium",
        "dependencies": [
          4
        ],
        "status": "todo",
        "subtasks": [
          {
            "id": 1,
            "title": "创建教程 05-schedule-send",
            "description": "创建新教程的目录，并撰写文章草稿，说明其目的和基本原理。",
            "status": "todo"
          },
          {
            "id": 2,
            "title": "分析 `ccc-schedule-send` 核心逻辑",
            "description": "在教程中详细拆解 `ccc-schedule-send` 示例的核心智能合约和前端交互逻辑。",
            "status": "todo"
          }
        ]
      },
      {
        "id": 7,
        "title": "阶段 7: 锁定 DOB 教程",
        "description": "撰写一篇关于如何锁定 DOB 的详细教程，并解释其重要性。",
        "priority": "medium",
        "dependencies": [
          4
        ],
        "status": "todo",
        "subtasks": [
          {
            "id": 1,
            "title": "创建教程 05 - 锁定 DOB",
            "description": "创建 `tutorials/05-locking-dob` 目录，并撰写教程文章，解释什么是 DOB 及其应用场景。",
            "status": "todo"
          },
          {
            "id": 2,
            "title": "提供创建和锁定 DOB 的代码片段",
            "description": "参考 DOB Cookbook，在教程中提供用于创建和锁定 DOB 的核心 TypeScript/JavaScript 代码片段。",
            "status": "todo"
          }
        ]
      },
      {
        "id": 7,
        "title": "阶段 8 (TODO): 研究可替代的 Staking 凭证",
        "description": "研究并设计一种可替代的 (Fungible) 代币，用于代表用户的 Staking 凭证。",
        "priority": "low",
        "dependencies": [
          5
        ],
        "status": "todo",
        "subtasks": [
          {
            "id": 1,
            "title": "研究 UDT/xUDT 标准",
            "description": "调研 Nervos 上的 UDT 和 xUDT 代币标准，评估其作为 Staking 凭证的可行性。",
            "status": "todo"
          },
          {
            "id": 2,
            "title": "撰写设计草案",
            "description": "撰写一份 Markdown 文档，构思凭证代币的经济模型、生命周期（发行、转让、销毁）和技术实现路径。",
            "status": "todo"
          }
        ]
      },
      {
        "id": 9,
        "title": "阶段 9 (TODO): 研究 UDTStakeable 实现",
        "description": "研究并实现一种可 Staking 的 UDT。",
        "priority": "low",
        "dependencies": [
          6
        ],
        "status": "todo",
        "subtasks": [
          {
            "id": 1,
            "title": "构思 UDTStakeable 合约接口",
            "description": "设计智能合约需要暴露给外部的接口，例如 stake(), unstake(), claimRewards() 等。",
            "status": "todo"
          },
          {
            "id": 2,
            "title": "开发原型合约 (Proof of Concept)",
            "description": "编写一个最简化的原型合约，用于验证核心的 Staking 和 Unstaking 逻辑。",
            "status": "todo"
          }
        ]
      }
    ],
    "metadata": {
      "created": "2025-06-18T22:51:36.824Z",
      "updated": "2025-06-19T14:29:51.899Z",
      "description": "Tasks for master context"
    }
  }
}